package cn.zxf.self.example;

import java.util.ArrayList;
import java.util.List;

public class ManageUserRoleRelExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table manage_user_role_rel
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table manage_user_role_rel
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table manage_user_role_rel
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table manage_user_role_rel
     *
     * @mbggenerated
     */
    public ManageUserRoleRelExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table manage_user_role_rel
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table manage_user_role_rel
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table manage_user_role_rel
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table manage_user_role_rel
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table manage_user_role_rel
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table manage_user_role_rel
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table manage_user_role_rel
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table manage_user_role_rel
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table manage_user_role_rel
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table manage_user_role_rel
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table manage_user_role_rel
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andManageUserRoleRelIdIsNull() {
            addCriterion("manage_user_role_rel_id is null");
            return (Criteria) this;
        }

        public Criteria andManageUserRoleRelIdIsNotNull() {
            addCriterion("manage_user_role_rel_id is not null");
            return (Criteria) this;
        }

        public Criteria andManageUserRoleRelIdEqualTo(Long value) {
            addCriterion("manage_user_role_rel_id =", value, "manageUserRoleRelId");
            return (Criteria) this;
        }

        public Criteria andManageUserRoleRelIdNotEqualTo(Long value) {
            addCriterion("manage_user_role_rel_id <>", value, "manageUserRoleRelId");
            return (Criteria) this;
        }

        public Criteria andManageUserRoleRelIdGreaterThan(Long value) {
            addCriterion("manage_user_role_rel_id >", value, "manageUserRoleRelId");
            return (Criteria) this;
        }

        public Criteria andManageUserRoleRelIdGreaterThanOrEqualTo(Long value) {
            addCriterion("manage_user_role_rel_id >=", value, "manageUserRoleRelId");
            return (Criteria) this;
        }

        public Criteria andManageUserRoleRelIdLessThan(Long value) {
            addCriterion("manage_user_role_rel_id <", value, "manageUserRoleRelId");
            return (Criteria) this;
        }

        public Criteria andManageUserRoleRelIdLessThanOrEqualTo(Long value) {
            addCriterion("manage_user_role_rel_id <=", value, "manageUserRoleRelId");
            return (Criteria) this;
        }

        public Criteria andManageUserRoleRelIdIn(List<Long> values) {
            addCriterion("manage_user_role_rel_id in", values, "manageUserRoleRelId");
            return (Criteria) this;
        }

        public Criteria andManageUserRoleRelIdNotIn(List<Long> values) {
            addCriterion("manage_user_role_rel_id not in", values, "manageUserRoleRelId");
            return (Criteria) this;
        }

        public Criteria andManageUserRoleRelIdBetween(Long value1, Long value2) {
            addCriterion("manage_user_role_rel_id between", value1, value2, "manageUserRoleRelId");
            return (Criteria) this;
        }

        public Criteria andManageUserRoleRelIdNotBetween(Long value1, Long value2) {
            addCriterion("manage_user_role_rel_id not between", value1, value2, "manageUserRoleRelId");
            return (Criteria) this;
        }

        public Criteria andManageUserIdIsNull() {
            addCriterion("manage_user_id is null");
            return (Criteria) this;
        }

        public Criteria andManageUserIdIsNotNull() {
            addCriterion("manage_user_id is not null");
            return (Criteria) this;
        }

        public Criteria andManageUserIdEqualTo(Long value) {
            addCriterion("manage_user_id =", value, "manageUserId");
            return (Criteria) this;
        }

        public Criteria andManageUserIdNotEqualTo(Long value) {
            addCriterion("manage_user_id <>", value, "manageUserId");
            return (Criteria) this;
        }

        public Criteria andManageUserIdGreaterThan(Long value) {
            addCriterion("manage_user_id >", value, "manageUserId");
            return (Criteria) this;
        }

        public Criteria andManageUserIdGreaterThanOrEqualTo(Long value) {
            addCriterion("manage_user_id >=", value, "manageUserId");
            return (Criteria) this;
        }

        public Criteria andManageUserIdLessThan(Long value) {
            addCriterion("manage_user_id <", value, "manageUserId");
            return (Criteria) this;
        }

        public Criteria andManageUserIdLessThanOrEqualTo(Long value) {
            addCriterion("manage_user_id <=", value, "manageUserId");
            return (Criteria) this;
        }

        public Criteria andManageUserIdIn(List<Long> values) {
            addCriterion("manage_user_id in", values, "manageUserId");
            return (Criteria) this;
        }

        public Criteria andManageUserIdNotIn(List<Long> values) {
            addCriterion("manage_user_id not in", values, "manageUserId");
            return (Criteria) this;
        }

        public Criteria andManageUserIdBetween(Long value1, Long value2) {
            addCriterion("manage_user_id between", value1, value2, "manageUserId");
            return (Criteria) this;
        }

        public Criteria andManageUserIdNotBetween(Long value1, Long value2) {
            addCriterion("manage_user_id not between", value1, value2, "manageUserId");
            return (Criteria) this;
        }

        public Criteria andManageRoleIdIsNull() {
            addCriterion("manage_role_id is null");
            return (Criteria) this;
        }

        public Criteria andManageRoleIdIsNotNull() {
            addCriterion("manage_role_id is not null");
            return (Criteria) this;
        }

        public Criteria andManageRoleIdEqualTo(Long value) {
            addCriterion("manage_role_id =", value, "manageRoleId");
            return (Criteria) this;
        }

        public Criteria andManageRoleIdNotEqualTo(Long value) {
            addCriterion("manage_role_id <>", value, "manageRoleId");
            return (Criteria) this;
        }

        public Criteria andManageRoleIdGreaterThan(Long value) {
            addCriterion("manage_role_id >", value, "manageRoleId");
            return (Criteria) this;
        }

        public Criteria andManageRoleIdGreaterThanOrEqualTo(Long value) {
            addCriterion("manage_role_id >=", value, "manageRoleId");
            return (Criteria) this;
        }

        public Criteria andManageRoleIdLessThan(Long value) {
            addCriterion("manage_role_id <", value, "manageRoleId");
            return (Criteria) this;
        }

        public Criteria andManageRoleIdLessThanOrEqualTo(Long value) {
            addCriterion("manage_role_id <=", value, "manageRoleId");
            return (Criteria) this;
        }

        public Criteria andManageRoleIdIn(List<Long> values) {
            addCriterion("manage_role_id in", values, "manageRoleId");
            return (Criteria) this;
        }

        public Criteria andManageRoleIdNotIn(List<Long> values) {
            addCriterion("manage_role_id not in", values, "manageRoleId");
            return (Criteria) this;
        }

        public Criteria andManageRoleIdBetween(Long value1, Long value2) {
            addCriterion("manage_role_id between", value1, value2, "manageRoleId");
            return (Criteria) this;
        }

        public Criteria andManageRoleIdNotBetween(Long value1, Long value2) {
            addCriterion("manage_role_id not between", value1, value2, "manageRoleId");
            return (Criteria) this;
        }

        public Criteria andIsDeleteIsNull() {
            addCriterion("is_delete is null");
            return (Criteria) this;
        }

        public Criteria andIsDeleteIsNotNull() {
            addCriterion("is_delete is not null");
            return (Criteria) this;
        }

        public Criteria andIsDeleteEqualTo(Integer value) {
            addCriterion("is_delete =", value, "isDelete");
            return (Criteria) this;
        }

        public Criteria andIsDeleteNotEqualTo(Integer value) {
            addCriterion("is_delete <>", value, "isDelete");
            return (Criteria) this;
        }

        public Criteria andIsDeleteGreaterThan(Integer value) {
            addCriterion("is_delete >", value, "isDelete");
            return (Criteria) this;
        }

        public Criteria andIsDeleteGreaterThanOrEqualTo(Integer value) {
            addCriterion("is_delete >=", value, "isDelete");
            return (Criteria) this;
        }

        public Criteria andIsDeleteLessThan(Integer value) {
            addCriterion("is_delete <", value, "isDelete");
            return (Criteria) this;
        }

        public Criteria andIsDeleteLessThanOrEqualTo(Integer value) {
            addCriterion("is_delete <=", value, "isDelete");
            return (Criteria) this;
        }

        public Criteria andIsDeleteIn(List<Integer> values) {
            addCriterion("is_delete in", values, "isDelete");
            return (Criteria) this;
        }

        public Criteria andIsDeleteNotIn(List<Integer> values) {
            addCriterion("is_delete not in", values, "isDelete");
            return (Criteria) this;
        }

        public Criteria andIsDeleteBetween(Integer value1, Integer value2) {
            addCriterion("is_delete between", value1, value2, "isDelete");
            return (Criteria) this;
        }

        public Criteria andIsDeleteNotBetween(Integer value1, Integer value2) {
            addCriterion("is_delete not between", value1, value2, "isDelete");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("create_time is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("create_time is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(Long value) {
            addCriterion("create_time =", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(Long value) {
            addCriterion("create_time <>", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(Long value) {
            addCriterion("create_time >", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(Long value) {
            addCriterion("create_time >=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(Long value) {
            addCriterion("create_time <", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(Long value) {
            addCriterion("create_time <=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<Long> values) {
            addCriterion("create_time in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<Long> values) {
            addCriterion("create_time not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(Long value1, Long value2) {
            addCriterion("create_time between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(Long value1, Long value2) {
            addCriterion("create_time not between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeIsNull() {
            addCriterion("modify_time is null");
            return (Criteria) this;
        }

        public Criteria andModifyTimeIsNotNull() {
            addCriterion("modify_time is not null");
            return (Criteria) this;
        }

        public Criteria andModifyTimeEqualTo(Long value) {
            addCriterion("modify_time =", value, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeNotEqualTo(Long value) {
            addCriterion("modify_time <>", value, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeGreaterThan(Long value) {
            addCriterion("modify_time >", value, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeGreaterThanOrEqualTo(Long value) {
            addCriterion("modify_time >=", value, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeLessThan(Long value) {
            addCriterion("modify_time <", value, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeLessThanOrEqualTo(Long value) {
            addCriterion("modify_time <=", value, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeIn(List<Long> values) {
            addCriterion("modify_time in", values, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeNotIn(List<Long> values) {
            addCriterion("modify_time not in", values, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeBetween(Long value1, Long value2) {
            addCriterion("modify_time between", value1, value2, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeNotBetween(Long value1, Long value2) {
            addCriterion("modify_time not between", value1, value2, "modifyTime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table manage_user_role_rel
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table manage_user_role_rel
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}