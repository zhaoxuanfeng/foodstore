package cn.zxf.self.example;

import java.util.ArrayList;
import java.util.List;

public class OrderRecipesRelExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table order_recipes_rel
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table order_recipes_rel
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table order_recipes_rel
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table order_recipes_rel
     *
     * @mbggenerated
     */
    public OrderRecipesRelExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table order_recipes_rel
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table order_recipes_rel
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table order_recipes_rel
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table order_recipes_rel
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table order_recipes_rel
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table order_recipes_rel
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table order_recipes_rel
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table order_recipes_rel
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table order_recipes_rel
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table order_recipes_rel
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table order_recipes_rel
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andOrderIdIsNull() {
            addCriterion("order_id is null");
            return (Criteria) this;
        }

        public Criteria andOrderIdIsNotNull() {
            addCriterion("order_id is not null");
            return (Criteria) this;
        }

        public Criteria andOrderIdEqualTo(Long value) {
            addCriterion("order_id =", value, "orderId");
            return (Criteria) this;
        }

        public Criteria andOrderIdNotEqualTo(Long value) {
            addCriterion("order_id <>", value, "orderId");
            return (Criteria) this;
        }

        public Criteria andOrderIdGreaterThan(Long value) {
            addCriterion("order_id >", value, "orderId");
            return (Criteria) this;
        }

        public Criteria andOrderIdGreaterThanOrEqualTo(Long value) {
            addCriterion("order_id >=", value, "orderId");
            return (Criteria) this;
        }

        public Criteria andOrderIdLessThan(Long value) {
            addCriterion("order_id <", value, "orderId");
            return (Criteria) this;
        }

        public Criteria andOrderIdLessThanOrEqualTo(Long value) {
            addCriterion("order_id <=", value, "orderId");
            return (Criteria) this;
        }

        public Criteria andOrderIdIn(List<Long> values) {
            addCriterion("order_id in", values, "orderId");
            return (Criteria) this;
        }

        public Criteria andOrderIdNotIn(List<Long> values) {
            addCriterion("order_id not in", values, "orderId");
            return (Criteria) this;
        }

        public Criteria andOrderIdBetween(Long value1, Long value2) {
            addCriterion("order_id between", value1, value2, "orderId");
            return (Criteria) this;
        }

        public Criteria andOrderIdNotBetween(Long value1, Long value2) {
            addCriterion("order_id not between", value1, value2, "orderId");
            return (Criteria) this;
        }

        public Criteria andRecipesIdIsNull() {
            addCriterion("recipes_id is null");
            return (Criteria) this;
        }

        public Criteria andRecipesIdIsNotNull() {
            addCriterion("recipes_id is not null");
            return (Criteria) this;
        }

        public Criteria andRecipesIdEqualTo(Integer value) {
            addCriterion("recipes_id =", value, "recipesId");
            return (Criteria) this;
        }

        public Criteria andRecipesIdNotEqualTo(Integer value) {
            addCriterion("recipes_id <>", value, "recipesId");
            return (Criteria) this;
        }

        public Criteria andRecipesIdGreaterThan(Integer value) {
            addCriterion("recipes_id >", value, "recipesId");
            return (Criteria) this;
        }

        public Criteria andRecipesIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("recipes_id >=", value, "recipesId");
            return (Criteria) this;
        }

        public Criteria andRecipesIdLessThan(Integer value) {
            addCriterion("recipes_id <", value, "recipesId");
            return (Criteria) this;
        }

        public Criteria andRecipesIdLessThanOrEqualTo(Integer value) {
            addCriterion("recipes_id <=", value, "recipesId");
            return (Criteria) this;
        }

        public Criteria andRecipesIdIn(List<Integer> values) {
            addCriterion("recipes_id in", values, "recipesId");
            return (Criteria) this;
        }

        public Criteria andRecipesIdNotIn(List<Integer> values) {
            addCriterion("recipes_id not in", values, "recipesId");
            return (Criteria) this;
        }

        public Criteria andRecipesIdBetween(Integer value1, Integer value2) {
            addCriterion("recipes_id between", value1, value2, "recipesId");
            return (Criteria) this;
        }

        public Criteria andRecipesIdNotBetween(Integer value1, Integer value2) {
            addCriterion("recipes_id not between", value1, value2, "recipesId");
            return (Criteria) this;
        }

        public Criteria andCookIdIsNull() {
            addCriterion("cook_id is null");
            return (Criteria) this;
        }

        public Criteria andCookIdIsNotNull() {
            addCriterion("cook_id is not null");
            return (Criteria) this;
        }

        public Criteria andCookIdEqualTo(Long value) {
            addCriterion("cook_id =", value, "cookId");
            return (Criteria) this;
        }

        public Criteria andCookIdNotEqualTo(Long value) {
            addCriterion("cook_id <>", value, "cookId");
            return (Criteria) this;
        }

        public Criteria andCookIdGreaterThan(Long value) {
            addCriterion("cook_id >", value, "cookId");
            return (Criteria) this;
        }

        public Criteria andCookIdGreaterThanOrEqualTo(Long value) {
            addCriterion("cook_id >=", value, "cookId");
            return (Criteria) this;
        }

        public Criteria andCookIdLessThan(Long value) {
            addCriterion("cook_id <", value, "cookId");
            return (Criteria) this;
        }

        public Criteria andCookIdLessThanOrEqualTo(Long value) {
            addCriterion("cook_id <=", value, "cookId");
            return (Criteria) this;
        }

        public Criteria andCookIdIn(List<Long> values) {
            addCriterion("cook_id in", values, "cookId");
            return (Criteria) this;
        }

        public Criteria andCookIdNotIn(List<Long> values) {
            addCriterion("cook_id not in", values, "cookId");
            return (Criteria) this;
        }

        public Criteria andCookIdBetween(Long value1, Long value2) {
            addCriterion("cook_id between", value1, value2, "cookId");
            return (Criteria) this;
        }

        public Criteria andCookIdNotBetween(Long value1, Long value2) {
            addCriterion("cook_id not between", value1, value2, "cookId");
            return (Criteria) this;
        }

        public Criteria andWaiterIdIsNull() {
            addCriterion("waiter_id is null");
            return (Criteria) this;
        }

        public Criteria andWaiterIdIsNotNull() {
            addCriterion("waiter_id is not null");
            return (Criteria) this;
        }

        public Criteria andWaiterIdEqualTo(Long value) {
            addCriterion("waiter_id =", value, "waiterId");
            return (Criteria) this;
        }

        public Criteria andWaiterIdNotEqualTo(Long value) {
            addCriterion("waiter_id <>", value, "waiterId");
            return (Criteria) this;
        }

        public Criteria andWaiterIdGreaterThan(Long value) {
            addCriterion("waiter_id >", value, "waiterId");
            return (Criteria) this;
        }

        public Criteria andWaiterIdGreaterThanOrEqualTo(Long value) {
            addCriterion("waiter_id >=", value, "waiterId");
            return (Criteria) this;
        }

        public Criteria andWaiterIdLessThan(Long value) {
            addCriterion("waiter_id <", value, "waiterId");
            return (Criteria) this;
        }

        public Criteria andWaiterIdLessThanOrEqualTo(Long value) {
            addCriterion("waiter_id <=", value, "waiterId");
            return (Criteria) this;
        }

        public Criteria andWaiterIdIn(List<Long> values) {
            addCriterion("waiter_id in", values, "waiterId");
            return (Criteria) this;
        }

        public Criteria andWaiterIdNotIn(List<Long> values) {
            addCriterion("waiter_id not in", values, "waiterId");
            return (Criteria) this;
        }

        public Criteria andWaiterIdBetween(Long value1, Long value2) {
            addCriterion("waiter_id between", value1, value2, "waiterId");
            return (Criteria) this;
        }

        public Criteria andWaiterIdNotBetween(Long value1, Long value2) {
            addCriterion("waiter_id not between", value1, value2, "waiterId");
            return (Criteria) this;
        }

        public Criteria andTakeawayIdIsNull() {
            addCriterion("takeaway_id is null");
            return (Criteria) this;
        }

        public Criteria andTakeawayIdIsNotNull() {
            addCriterion("takeaway_id is not null");
            return (Criteria) this;
        }

        public Criteria andTakeawayIdEqualTo(Integer value) {
            addCriterion("takeaway_id =", value, "takeawayId");
            return (Criteria) this;
        }

        public Criteria andTakeawayIdNotEqualTo(Integer value) {
            addCriterion("takeaway_id <>", value, "takeawayId");
            return (Criteria) this;
        }

        public Criteria andTakeawayIdGreaterThan(Integer value) {
            addCriterion("takeaway_id >", value, "takeawayId");
            return (Criteria) this;
        }

        public Criteria andTakeawayIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("takeaway_id >=", value, "takeawayId");
            return (Criteria) this;
        }

        public Criteria andTakeawayIdLessThan(Integer value) {
            addCriterion("takeaway_id <", value, "takeawayId");
            return (Criteria) this;
        }

        public Criteria andTakeawayIdLessThanOrEqualTo(Integer value) {
            addCriterion("takeaway_id <=", value, "takeawayId");
            return (Criteria) this;
        }

        public Criteria andTakeawayIdIn(List<Integer> values) {
            addCriterion("takeaway_id in", values, "takeawayId");
            return (Criteria) this;
        }

        public Criteria andTakeawayIdNotIn(List<Integer> values) {
            addCriterion("takeaway_id not in", values, "takeawayId");
            return (Criteria) this;
        }

        public Criteria andTakeawayIdBetween(Integer value1, Integer value2) {
            addCriterion("takeaway_id between", value1, value2, "takeawayId");
            return (Criteria) this;
        }

        public Criteria andTakeawayIdNotBetween(Integer value1, Integer value2) {
            addCriterion("takeaway_id not between", value1, value2, "takeawayId");
            return (Criteria) this;
        }

        public Criteria andRelStatusIsNull() {
            addCriterion("rel_status is null");
            return (Criteria) this;
        }

        public Criteria andRelStatusIsNotNull() {
            addCriterion("rel_status is not null");
            return (Criteria) this;
        }

        public Criteria andRelStatusEqualTo(String value) {
            addCriterion("rel_status =", value, "relStatus");
            return (Criteria) this;
        }

        public Criteria andRelStatusNotEqualTo(String value) {
            addCriterion("rel_status <>", value, "relStatus");
            return (Criteria) this;
        }

        public Criteria andRelStatusGreaterThan(String value) {
            addCriterion("rel_status >", value, "relStatus");
            return (Criteria) this;
        }

        public Criteria andRelStatusGreaterThanOrEqualTo(String value) {
            addCriterion("rel_status >=", value, "relStatus");
            return (Criteria) this;
        }

        public Criteria andRelStatusLessThan(String value) {
            addCriterion("rel_status <", value, "relStatus");
            return (Criteria) this;
        }

        public Criteria andRelStatusLessThanOrEqualTo(String value) {
            addCriterion("rel_status <=", value, "relStatus");
            return (Criteria) this;
        }

        public Criteria andRelStatusLike(String value) {
            addCriterion("rel_status like", value, "relStatus");
            return (Criteria) this;
        }

        public Criteria andRelStatusNotLike(String value) {
            addCriterion("rel_status not like", value, "relStatus");
            return (Criteria) this;
        }

        public Criteria andRelStatusIn(List<String> values) {
            addCriterion("rel_status in", values, "relStatus");
            return (Criteria) this;
        }

        public Criteria andRelStatusNotIn(List<String> values) {
            addCriterion("rel_status not in", values, "relStatus");
            return (Criteria) this;
        }

        public Criteria andRelStatusBetween(String value1, String value2) {
            addCriterion("rel_status between", value1, value2, "relStatus");
            return (Criteria) this;
        }

        public Criteria andRelStatusNotBetween(String value1, String value2) {
            addCriterion("rel_status not between", value1, value2, "relStatus");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table order_recipes_rel
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table order_recipes_rel
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}